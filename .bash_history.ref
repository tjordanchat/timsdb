pwd
sudo yum install git
apt-get
sudo apt-get install git-core
ll
ll .ssh
ll
cd .ssh
ll
cd
ssh-keygen -t rsa
cd .ssh
ll
cat *.pub
git config --global user.name "Tim XXXXXXXX"
git config --global user.email jamestXXXXXXXX@gmail.com
cd
git clone git@github.com:tXXXXXXXXchat/XXXXXXXX.git
ll
cd XXXXXXXX/
ll
cp .bashrc .bash_profile .vimrc ..
exec bash
cd
ll
cd
ll
ls -la
pwd
echo $SHELL
exec bash
cd
ll
v
vi .bashrc
cd XXXXXXXX/
ll
ls -la
cd
cd XXXXXXXX
vcd
cd
cat > .bashrc
ll
exec bash
cat > .vimrc
cat .bash_profile 
cat > .bash_profile 
store
mkdir bin
groups
cd /etc/init.d
vagrant 
sudo apt-get install vagrant
gcc
git clone https://github.com/dotcloud/docker.git
vi .aws
cd .ssh
docker
sudo docker run -i -t XXXXXXXX /bin/bash
df
myip
which myip
myip
curl --help
myip
cd docker
vi runtime.go
vi Makefile
which docker
ll /usr/bin/docker
file /usr/bin/docker
df
wget http://www.haskell.org/platform/download/2013.2.0.0/haskell-platform-2013.2.0.0.tar.gz
extract haskell-platform-2013.2.0.0.tar.gz 
rm *.gz
cd haskell-platform-2013.2.0.0/
./configure
sudo apt-get ghc
sudo aptitude install ghc darcs zlib1g-dev libncurses5-dev
wget http://www.haskell.org/ghc/dist/7.4.1/ghc-7.4.1-src.tar.bz2
darcs get --lazy http://darcs.haskell.org/cabal/
tar xjf ghc-7.4.1-src.tar.bz2
cd ghc-7.4.1
./configure --prefix=$HOME/src/ghc
time make -j9 #Only took me about 19 minutes on recent quad core xeon
cd ..
rm ghc-7.4.1-src.tar.bz2 
rm -rf ghc-7.4.1/
wget ll
cd haskell-platform-2013.2.0.0/
./configure
#wget wget http://www.haskell.org/ghc/dist/7.4.1/ghc-7.4.1-src.tar.bz2
#wget wget http://www.haskell.org/ghc/dist/7.4.1/ghc-7.4.1-src.tar.bz2
#wget wget http://www.haskell.org/ghc/dist/7.4.1/ghc-7.4.1-src.tar.bz2
set -o vi
set -o vi
#wget wget http://www.haskell.org/ghc/dist/7.4.1/ghc-7.4.1-src.tar.bz2
a vi
which wim
set -o vim
which vim
which vim
#wget wget http://www.haskell.org/ghc/dist/7.4.1/ghc-7.4.1-src.tar.bz2
#wget wget http://www.haskell.org/ghc/dist/7.6.3/ghc-7.6.3-src.tar.bz2
wget wget http://www.haskell.org/ghc/dist/7.6.3/ghc-7.6.3-src.tar.bz2
extract ghc-7.6.3-src.tar.bz2 
rm *z2
cd ghc-7.6.3/
./configure
make
sudo apt-get install git cabal-install libghc-zlib-dev
cabal update
cabal install gitit
df
sudo cabal install gitit
gitit
sudo apt-get install gitit
cd .cabal
gitit
df
du -s *
rm -rf ghc-7.6.3/
df
cd /
sudo du -s *
cd /lib
du -s *
rm -rf haskell-platform-2013.2.0.0/
df
du -s *
cd docker
which docker
..
rm -rf docker
df
rm -rf cabal
df
gitit
sudo apt-get install nginx
ifconfig eth0 | grep inet | awk '{ print $2 }'
myip
sudo service nginx start
cd /etc
cd nginx/
cd sites-enabled/
cd ../sites-available/
vi default 
cd /usr/share/nginx/
cd www
c w
vi index.html 
cat > index.html
sudo cat > index.html 
sudo su
mkdir css
sudo mkdir css
cd css
sudp mv /root/normalize.min.css .
sudo mv /root/normalize.min.css .
env
which vim
sudo su
c w
sudo vi index.html 
ls -la
a ll
tree
sudo apt-get install tree
tree
udo apt-get install python-software-properties 
sudo add-apt-repository ppa:chris-lea/node.js 
npm
sudo apt-get install npm
sudo apt-get install node.js
node
df
c w
sudo vi index.html 
sudo vi index.html 
sudo vi index.html 
puppet
df
sudo apt-get install puppet-common
sudo service puppet start
which puppet
puppet
puppet help
c w
vi index.html 
sudo vi index.html 
less /etc/passwd
ip link add virtual0 link eth0 type macvlan mode bridge
ll
ll
pwd
eb
rm Flat-Design-UI-Components.zip 
ll
cd
eb
extract bootflat-master.zip 
sudo apt-get install unzip
extract bootflat-master.zip 
rm *.zip
cd bootflat-master/
..
-
echo $w
sudp cp -r * $w
sudo cp -r * $w
c w
mv index.html index.html.bak
sudo mv index.html index.html.bak
sudo cat > index.html
sudo su
xs
store
tree
c w
vr
cd bin
mkdir docker
c.
cd docker/
mkdir nodejs
cd nodejs/
cat > index.js
mv * package.json
cat > index.js
cat > Dockerfile
sudo docker build -t XXXXXXXX/centos-node-hello
sudo docker build -t XXXXXXXX/centos-node-hello .
df
sudo docker images
cd /var/lib/docker
sudo
sudo su
df
sudo docker images
docker
sudo docker info
sd
sd info
sd
sd images
sd
sd ps
sudo docker run -i -t XXXXXXXX /bin/bash
sd images
sudo kill -9 16909
sudo service stop nginx
sudo /usr/bin/nginx -s stop
which nginx
sudo nginx -s stop
kill -9 16910
sudo kill -9 16910
pstree
sudo su
ps -tf
pidtree 1
pidtree
ps afx
pst
sudo reboot
uptime
sudo nginx -s stop
sd images
sd
sd rmi
sd
sd images
sd run
docker
sd images
sdc
sdi
sdc
sd
sd run
sdi
sd run -p 8181:8080 -d XXXXXXXX/centos-node-hello
sdi
sdc
ps -ef |less
sd logs 9782667b3b09
sdh search
sudo docker login
sdh login
sudo docker login
sudo su
sudo docker login
cdin
bin
cd bin
cd docker/
cd nodejs/
..
mkdir trac
cd trac
cp ../nodejs/Dockerfile .
vi Dockerfile 
sd
sdi
sd info
sd
sdc
ff
ff docker
top
docker
sd version
sudo ls /etc/apt/sources.list.d/docker.list
sudo ls -l /etc/apt/sources.list.d/doc
sudo apt-get install lxc-docker
sd version
c t
sds trac
sd
sd pull turnkeylinux/trac-13.0
sdi
df
sdc
sd
d
di
dc
dv
dh
ds
which df
which alias
di
dc
ua dc
dc
d ps
dc
dp
dl
dh
d
dd
di
git clone https://github.com/nickstenning/dockerfiles.git
cd dockerfiles
cp -r mediawiki/ ~/XXXXXXXX/
cd $_
ga mediawiki/
gc
cd dockerfiles/
cd wikidata/
..
cd dockerfiles/
cd mediawiki/
sudo su
dc
cd dockerfiles/
cd mediawiki/
sudo su
di
d
file `which docker`
dc
